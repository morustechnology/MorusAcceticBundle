#   This table provides referential integrity between AR, AP, GL tables on one
#   hand and acc_trans on the other, pending the refactoring of those tables.  It
#   also is used to provide discretionary locking of financial transactions across 
#   database connections, for example in batch payment workflows.
Morus\AcceticBundle\Entity\Transaction:
    type: entity
    table: accetic_transaction
    indexes:
#        transaction_locked_by_i:
#            columns:
#                - locked_by
#        IDX_created_by:
#            columns:
#                - created_by
#        IDX_approved_by:
#            columns:
#                - approved_by
    id:
        id:
            type: integer
            nullable: false
            unsigned: false
            comment: ''
            id: true
            generator:
                strategy: AUTO
    fields:
        tableName:
            type: text
            nullable: true
            length: null
            fixed: false
            comment: ''
            column: table_name
        approved:
            type: boolean
            nullable: true
            comment: ''
        approvedAt:
            type: datetime
            nullable: true
            comment: ''
            column: approved_at
        sortOrder:
            type: integer
            nullable: true
            column: sort_order
            options:
                unsigned: true
                default: 0
        active:
            type: boolean
            options:
                default: 1
        createDate:
            type: datetime
            column: create_date
        lastModifiedDate:
            type: datetime
            nullable: true
            column: last_modified_date
        inactiveDate:
            type: datetime
            nullable: true
            column: inactive_date
    oneToOne:
        ar:
            targetEntity: Ar
            mappedBy: transaction
            onDelete: CASCADE
        ap:
            targetEntity: Ap
            mappedBy: transaction
            onDelete: CASCADE
    oneToMany:
        invoices:
            targetEntity: Invoice
            mappedBy: transaction
            orphanRemoval: true
            cascade: ["persist"]
    manyToOne:
        unit:
            targetEntity: Unit
            cascade: ["persist"]
            inversedBy: transactions
            joinColumns:
                transaction_id:
                    referencedColumnName: id
            orphanRemoval: false
    lifecycleCallbacks: 
        prePersist: [ onPrePersist ]
        postPersist: [ onPostPersist ]
